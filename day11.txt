2020.12.31

★Controller의 리턴타입
스프링 mvc구조가 기존의 상소고가 인터페이스에서 어노테이션을 사용하는 방식으로 변한 이후에 가장 큰 변화 중 하나는 리턴타입이
자유로워 졌다는 점 이다.
Controller의 메서드가 사용할 수 있는 리턴 타입은 주로 다음과 같습니다.
-String : jsp를 이용하는 경우에는 jsp파일의 경로와 파일이름을 나타내기 위하여 사용한다.
-void : 호출하는 url과 동일한 이름의 jsp를 의미한다.
-vo, dto : 주로 json타입의 데이터를 만들어서 반환하는 용도로 사용한다.
-ResponseEntity 타입 : response할때 Http 헤더 정보와 내용을 가공하는 용도로 사용한다.
-Model, ModelAndView : Model로 데이터를 반환하거나 화면까지 같이 지정하는 경우에 사용한다.(최근에는 많이 사용x)
-HttpHeaders : 응답에 내용없이 http헤더 메시지만 전달하는 용도로 사용한다.

★void타입
메서드의 리턴 타입을 void로 지정하는 경우 일반적인 경우에는 해당 url의 경로를 그대로 jsp파일의 이름으로 사용한다.
@GetMapping('/ex05')
public void ex05(){
	log.info('/ex05.....');
}

★객체타입
Controller의 메서드 리턴타입을 VO , DTO타입 등 복합적인 데이터가 들어간 객체 타입으로 지정할 수 있는데 , 이 경우는 주로 json 데이터를
만들어 내는 용도로 사용한다. 이를 위해서는 pom.xml에 jackson-databind 라이브러리를 추가해야 한다.
또한 스프링mvc는 자동으로 브라우저에 json 타입으로 객체를 변환해서 전달하게 된다.
@GETMapping('/ex07')
public @ResponseBody SampleDTO ex07(){
	sampleDTO dto = new SampleDTO();
	dto.setAge(27);
	dto.setName('홍길동');
	return dto;
}
개발자 도구를 통해서 살펴보면 , 서버에서 전송하는 MIME타입이 application/json으로 처리되는 것을 볼 수 있다.

★ResponseEntity 타입
web을 다루다 보면 HTTP 프로토콜의 헤더를 다루는 경우도 종종 있다. 스프링 mvc의 사상은 HTTPServletRequest나 HttpServletResponse를 직접 핸들링하지 않아도
이런 작업이 가능하도록 작성되었기 때문에 이러한 처리를 위해 ResponseEntity타입을 통해서 원하는 헤더 정보나 데이터를 전달할 수 있다.



★MIME 타입이란? 간단하게 말하면 파일변환을 뜻한다.
원래는 이메일과 함께 동봉할 파일을 텍스트 문자로 전환해서 이메일 시스템을 통해 전달하기 위해 개발되었지만
현재는 웹을 통해서 여러형태의 파일을 전달하는데에 쓰인다.
MIME를 사용하기 전에는 UUEncode방식을 이용하고 있었으며 새로운 인코딩 방식을 위해 MIME을 도입하게 되었다.

인코딩 : 바이너리 파일에서 텍스트 파일로 변환
디코딩 : 텍스트 파일에서 바이너리 파일로 변환
ASCII만으로는 전송이 불가능하여 기존의 시스템에서 문제없이 전달하기 위해 인코딩-디코딩이 생겨났다.

MIME로 인코딩한 파일은 Content-type 정보를 파일의 앞부분에 담게 되며, Content-type은 여러가지의 타입이 있다.
특정 Content-type은 파일을 웹서버로 부터 전달받아 웹브라우저에서 열수 있다..

★MIME의 타입
text : 특정 문자셋으로 구성된 텍스트 정보나 포스트 스크립 같은 formatted text 정보 전송에 사용
	text/plain, text/html, text/css, text/javascript
multipart : 모든 종류의 이미지를 나타낸다. 비디오는 포함되지 않는다.
	audio/midi, audio/mpeg, audio/webm, audio/ogg, audio/wav
audio : 모든 종류의 오디오를 전송한다.
	audio/midi, audio/mpeg, audio/webm, audio/ogg, audio/wav
video : 모든 종류의 비디오를 전송한다.
	video/webm, video/ogg
application : 모든 이진 데이터를 전송한다.
	application/octet-stream, application/pkcs12, application/vnd.mspowerpoint, application/xhtml+xml, 	application/xml,  application/pdf

* File업로드시 form태그에 작성하는 multipart/form-data는 일반적으로 다른 MIME 타입들을 지닌 개별적인 파트들로 나누어지는 문서의 카테고리를 나타낸다. 
합성된 문서를 나타내는 방법이다..

출처 : https://server-talk.tistory.com/183