2021.01.25

★@Component의 종류와 시맨틱 @Component
어노테이션으로 객체를 생성햇을때 초기값은 어떻게 주느냐,, => @Value
초기값 설정하고 싶은 변수에다가 @Value("값") 하면된다.
사실  @Component는 넓은의미고 mvc방식으로 제작하게 된다면 @Service , @Controller, @Repository 등으로 써야한다.
같은역할이지만, 의미를 분명하게 하기위해. @Service 도 @Controller도 @Repository모두 @Component에 소속되어있다.

*MVC에서의 기본구성
@Service - 사용자의 업무단위.
@Repository - 보통 DAO
@Controller - 컨트롤러

★Java Configuration
기존 xml방식에서 (DI) 어노테이션을 이용하여 자바코드에 설정을 심는것..
@Configuration 설정을 위한 파일이란걸 명시한다. 클래스 위에 그리고 @ComponentScan 명시

@ComponentScan("스캔할패키지")
@Configuration		// 설정파일 명시하기.
public class NewlecAppConfig{
	@Bean 		// 만든것을 컨테이너에 담구기 , 스프링은 호출할 것이다.
	public Exam exam()	 {	//xml에서의 빈의 아이디 역할 =>  exam()
		return new NewlecExam();
}

* ApplicationContext 생성하기
ApplicationContext context = new AnnotationConfigApplicationContext(NewlecAppConfig.class);  // 클래스 정보 객체 넘겨주기
register라는 함수를 통해 여러개의 context 설정가능하다.

★AOP (Aspect Origented Programming)
방법론. 스프링이 도움을 주고 지원해 준다. 사용자 요구사항이 아닌 개발자, 운영자가 필요한 내용을 위해 소스를 작성하는 것..
관점이 다른 업무를 위해 관점에 따라 프로그램을 만드는 것. 객체지향 보다 더 큰 의미.. 
로그처리 , (성능 권한) , 보안처리 , 트랜잭션처리 등 같이 사용자 관점이 아닌 소스들은 보조업무를 위해 위 , 아래에 배치되어 있다.=>크로스컷팅
쉽게 소스를 수정하고 삭제할 수 있게 하기위해 개발되었다.. 
=>곁다리 업무를 따로 배치(크로스컷팅)하고 곁다리업무에다가 본업무(코어)를 호출하게 하고 쉽게 수정하고 삭제하게끔

