2021.01.18

또 반복학습 restful...

★restAPI
정보들이 주고받아지는데 있어서 개발자들 사이에 널리 쓰이는 형식.
우체국에가 면 송장이 있고, 사용자들이 형식에 맞춰서 송장 작성을한다..
어떤 제품이나 기술이 아닌 형식이기 때문에, 어떤 프로그래밍 언어를 쓰든 무슨 프레임워크를 쓰든 , 뭐에다 소프트웨어를 만들든
이 폼에 맞춰서 만들면 된다..

★api 
어떤 기계를 만들면 사용자가 그 기능들을 전부 활용 할 수 있도록 제어장치를 마련해야 한다.
TV는 사용자가 그걸 켜거나 끄고 , 채널을 선택하고 음량조절을 할 수 있게 해줘야 한다.
그래서 리모컨이 있다..
같은 이유로 자판기에는 버튼들이 있고, 컴퓨터에는 키보드와 마우스가 있다.
이런것들을 '인터페이스'라고 부른다. 기계와 인간 간의 소통창구..
사용자가 명령을 넣는 것 뿐아니라, 그 결과와 정보들을 받아오기 위한 TV의 스크린, 컴퓨터의 모니터 또한 인터페이스에 속한다..
기계와 기계, 소프트웨어와 소프트웨어 사이에도 수많은 요청과 정보 교환이 이뤄지고 있다. 소통할 수 있는 창구가 필요하다!!!!
이처럼 소프트웨어가 다른 소프트웨어로 부터 지정된 형식으로 요청, 명령을 받을 수 있는 수단을 
Application Programming Interface API 라고 한다...

☆restAPI 
만들고자 하는 서비스에서 기능 자체만 중요하게 생각한다면, rest의 의미도 없이 그냥 만들면된다.
예를들어 어떤 학원의 반과 학생들에 대한  api를 만들때 https://(사이트도메인)/asdf 라고 만들면 기능에는
문제가 없지만, 협업시나 유지보수할때 굉장히 일하기 힘들어진다..
restAPI로 만든 api는 요청을 보내는 주소만으로도 무엇을 하는지 알 수 있다.. 
https://(사이트도메인)/classes , https://(사이트도메인)/classes/2/students......
자원을 구조와 함께 나타내는 이러한 구분자를 URI이라고 한다..
서버에 restAPI로 요청을 보낼때는, HTTP란 규약에 따라 신호를 전송한다.
우체국에서 뭘 부칠때 우편, 등기, 소포 등 다양한 방식이 있듯이 restAPI도 다양한 방식이 있다..
get, post, petch 등 여러가지가 있지만..
restAPI로 요청을 보낼때는 목적에 따라 구분해서 사용해야한다.

GET - 데이터를 Read, 조회하는데 사용한다.
uri에 get으로 보내는 요청이 있다면 조회하는 요청이구나 생각하면 된다..
POST - Create, 새로운 정보를 추가하는데 사용한다. body에 실어 보낸다.
PUT, PATCH - Update, 변경하는데 사용한다..
알려진 정석은 , put은 전체를 변경할때, patch는 일부만 변경할 때 !!

uri는 동사가 아닌 명사로!! 

☆HTTP 
W3 상에서 정보를 주고 받을 수 있는 프로토콜. 주로 HTML문서를 주고받는 데에 쓰인다.
서버와 클라이언트의 사이에서 어떻게 메시지를 교환할지를 정해놓은 규칙인 것. 80번 포트를 사용한다..
Request, Response로 구성되어 있다. 예시를 들자면, 클라이언트가 웹 페이지에서 링크가 걸려있는 텍스트를 클릭(요청)하면 링크를 타고
새로운 페이지로 넘어간다.(응답).. 우리가 사용하는 웹 브라우저에서 인터넷 주소 맨 앞에 들어가는 http:// 는 바로 이 프로토콜을 사용해서 정보를 교환하겠다는 표시..
☆프로토콜
복수의 컴퓨터 사이나 중앙 컴퓨터와 단말기 사이에서 데이터 통신을 원할하게 하기 위해 필요한 통신 규약.. 

restAPI는 보통 xml 보다 json으로 많이 주고받는데..(읽고쓰기 쉬우니까??)... json을 추가적으로 공부하고
spring 에서 restAPI 예제도 찾아야겠다..

★json
속성-값 또는 키-값 으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷.
비동기 브라우저/서버통신(ajax)를 위해, xml을 대체하는 주요 데이터 포맷.. 인터넷에서 자료를 주고 받을 때 그 자료를 표현하는 방법으로
알려져 있다. 자료의 종류에 큰 제한은 없고, 컴퓨터 프로그램의 변수값을 표현 하는데 적합하다..
MIME 타입 : application/json

☆기본자료형 
수(number), 문자열(0개 이상의 유니코드 문자들의 연속, 문자열은 큰따옴표""로 구분)
참/거짓(true,false) , 배열(대괄호[]로 나타내며 요소는 쉼표로 구분)
객체 (순서가 없는 이름(key)/값(value) 쌍의 집합으로 이름(key)이 문자열이다.중괄호{}로 사용) , null

예제
 {
    "이름": "홍길동",
    "나이": 25,
    "성별": "여",
    "주소": "서울특별시 양천구 목동",
    "특기": ["농구", "도술"],
    "가족관계": {"#": 2, "아버지": "홍판서", "어머니": "춘섬"},
    "회사": "경기 수원시 팔달구 우만동"
 }
장점
- 텍스트로 이루어져 있으므로, 사람과 기계 모두 읽고 쓰기 쉬움.
- 프로그래밍 언어와 플랫폼에 독립적, 서로 다른 시스템간에 객체를 교환하기에 좋다
- 자바스크립트의 문법을 채용 했기 때문에, 자바스크립트에서 eval명령으로 곧바로 사용가능 => 그러나 외부에서 악성코드 유입가능..

* 파싱
문자열에서 네이티브 객체로 변환하는 것. 
네트워크를 통해 전달할 수 있게 객체를 문자열로 변환하는 과정은 문자열화(Stringification)이라고 한다.

출처 : 유투브 얄팍한코딩사전 , 구글 나무위키