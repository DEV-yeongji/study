2021.01.23
뉴렉처 유투브 강의 스프링 프레임워크 14강~15강 

★Autowired의 위치
public class InlineExamConsole implements ExamConsole {
	@Autowired	//필드위에서가능
	private Exam exam;
	@Autowired	//오버로드 생성자 위에서 가능
	public InlineExamConsole(Exam exam) {
		this.exam = exam;
	}
	@Autowired	//세터메소드 에서 가능
	public void setExam(Exam exam) {
		this.exam = exam;
	}
}
기본생성자를 호출하면서, 인젝션이 실행되길 원한다면 필드 위에 위치하면 된다. 단, 생성자가 없으면 오류난다
오버로딩생성자에 @Qualifier를 설정하고 @Autowired를 선언하길 원한다면 오류가난다.(오버로딩생성자를 호출하면서 인젝션실행)
그럴땐 @Qualifier를 매개변수안에 집어넣으면 된다..

☆Qualifier
Autowired가 실행되면서 만냑 동일한 타입을 가진 bean객체가 두개가 있을때 오류를 방지하기 위하여 Qualifier어노테이션을 사용
사용할 의존 객체를 선택할 수 있다. 한정자의 값을 설정하면 된다. 

만약 Autowired의 객체가 없어도 실행할수 있게하려면 속성에 false를 주면된다.
@Autowired(required = false) <-이렇게 명시한다.

-----------
* xml에서 객체생성 안하려면~~
클래스위에 @Component라고 붙이면 그 클래스는 객체화 된다..
문제는 그냥 실행하게되면 오류발생! 클래스가 스프링에서 생성하지 않고 읽혀지지않으니까 (xml)설정하지 않았지만 패키지를 뒤쟈봐서
그 녀석을 객체화 시켜준다.. => 예시..)<context:component-scan base-package="spring.di.ui" />
component-scan 이 지시어다. 
그리고 이렇게 설정을 한후 <context:annotation-config /> 는 지워도 된다..
또한, getBean.class가 아닌 이름으로 찾을때 (getBean("예시")) 못찾으니까 @Component("예시")라고 이름을 명명해주면 찾을수 있다.
왜냐면 xml에서 bean에 id를 지정했었으나 xml에서 안하고 @Componet라고 클래스를 객체화 시켰기 때문에

